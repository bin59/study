@charset "utf-8";
@import 'reset';
@import 'filter';
@import 'is()';
@import 'scroll-behavior';

// 将物品放在中间

// place-items: center stretch;
// 当与网格结合使用时，此属性在同时沿块和内联方向对齐项目时非常有用（即 align-items 和 justify-items 属性）。

html,
body {
  // 用户选择属性 （是否可以选择文本）
  -webkit-user-select: none; /* Safari */
  -ms-user-select: none; /* IE 10 and IE 11 */
  user-select: none; /* Standard syntax */

  // 自定义滚动条
  &::-webkit-scrollbar {
    width: 10px;
  }

  &::-webkit-scrollbar-track {
    box-shadow: inset 0 0 2px rgba(112, 109, 109, 0.9);
  }

  &::-webkit-scrollbar-thumb {
    background-color: rgb(243, 144, 87);
    outline: 2px solid rgb(151, 151, 148);
    border-radius: 30px;
  }

  .wrapper {
    #nav {
      height: 5vh;
      display: flex;
      justify-content: space-around;
      a {
        text-align: center;
        flex: 1;
        display: block;
        line-height: 5vh;
        &:nth-child(2) {
          border-left: 2px solid darksalmon;
          border-right: 2px solid darksalmon;
        }
      }
    }
    :is(#box1, #box2, #box3) {
      padding: 20px;
      box-sizing: border-box;
      position: relative;
    }
    #box1 {
      height: 95vh;
      background-color: blanchedalmond;

      .cursor {
        width: 150px;
        height: 400px;
        background-color: rgb(235, 229, 155);

        display: flex;
        flex-direction: column;
        justify-content: space-around;

        // 改变光标
        span {
          color: rgb(0, 132, 255);

          &:nth-child(1) {
            cursor: alias;
          }
          &:nth-child(2) {
            cursor: all-scroll;
          }
          &:nth-child(3) {
            cursor: auto;
          }
          &:nth-child(4) {
            cursor: cell;
          }
          &:nth-child(5) {
            cursor: context-menu;
          }
          &:nth-child(6) {
            cursor: col-resize;
          }
          &:nth-child(7) {
            cursor: copy;
          }
          &:nth-child(8) {
            cursor: crosshair;
          }
          &:nth-child(9) {
            cursor: default;
          }
          &:nth-child(10) {
            cursor: e-resize;
          }
          &:nth-child(11) {
            cursor: ew-resize;
          }
          &:nth-child(12) {
            cursor: grab;
          }
          &:nth-child(13) {
            cursor: grabbing;
          }
        }
      }
    }
    #box2 {
      height: 100vh;
      background-color: cadetblue;

      input {
        // 插入符号颜色  更改输入、文本区域或任何可编辑元素中光标的颜色
        caret-color: red;
      }
    }
    #box3 {
      height: 100vh;
      background-color: darksalmon;

      /* 
    一般做法
    <div>
        <template v-if="data.length">
            ...
        </template>
        <template v-else>
            <div>暂无数据</div>
        </template>
    </div>

    通过 :empty 选中内容为空的容器，然后通过伪元素为空容器添加提示。
    */
      .empty {
        width: 200px;
        height: 100px;
        line-height: 100px;
        text-align: center;
        background-color: white;
        &:empty::after {
          content: '没有数据';
        }
      }

      .gap {
        width: 200px;
        height: 100px;
        display: flex;
        // gap 属性它适用于 Grid 布局、Flex 布局以及多列布局
        //让每个元素之间隔开 20px
        gap: 20px;
        background-color: wheat;
        > div {
          width: 50px;
          height: 50px;
          background-color: aquamarine;
        }
      }

      .invalid {
        > div {
          > form {
            input:invalid {
              background-color: #ffdddd;
            }

            form:invalid {
              border: 5px solid #ffdddd;
            }

            input:valid {
              background-color: #ddffdd;
            }

            form:valid {
              border: 5px solid #ddffdd;
            }

            input:required {
              border-color: #800000;
              border-width: 3px;
            }

            input:required:invalid {
              border-color: #c00000;
            }
          }
        }
      }

      .focus-within {
        form {
          border: 1px solid;
          width: 400px;
          height: 300px;
          display: flex;
          justify-content: center;
          align-items: center;
        }
        form:focus-within {
          box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.3);
          background-color: beige;
        }
      }

      .mix-blend-mode-difference {
        .mode {
          display: flex;
          justify-content: center;
          align-items: center;
          mix-blend-mode: difference;
        }
        .dark {
          position: relative;
          left: 6px;
          height: 24px;
          width: 24px;
          background-color: grey;
          border-radius: 50%;
        }
        .light {
          mix-blend-mode: difference;
          position: relative;
          left: -6px;
          height: 16px;
          width: 16px;
          border-radius: 50%;
          border: 4px solid grey;
        }
      }
    }
  }
}
